<?xml version="1.0" encoding="UTF-8"?>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:jaxws="http://cxf.apache.org/blueprint/jaxws"
           xmlns:cxf="http://cxf.apache.org/blueprint/core"
           xmlns:amq="http://activemq.apache.org/schema/core"
           xsi:schemaLocation="
      http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
      http://cxf.apache.org/blueprint/jaxws http://cxf.apache.org/schemas/blueprint/jaxws.xsd
      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">
             
  <bean id="input" class="org.apache.camel.example.reportincident.ReportFactory" />

 
  <bean id="ConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    <property name="brokerURL" value="tcp://localhost:61616"/>
    <property name="userName" value="admin"/>
    <property name="password" value="admin"/>
  </bean>
  
  <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
    <property name="maxConnections" value="1"/>
    <property name="connectionFactory" ref="ConnectionFactory"/>
  </bean>
  
  <!-- This does not do anything -->
  <bean id="jms" class="org.apache.camel.component.jms.JmsComponent"> 
     <property name="configuration" ref="jmsConfig" />
  </bean>
  <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
    <property name="connectionFactory" ref="pooledConnectionFactory"/>
    <property name="concurrentConsumers" value="1"/>
    <property name="replyTo" value="TEST.REPORT.RESP" />
    <property name="replyToOverride" value="TEST.REPORT.RRESP" />
  </bean>


  <bean id="jmsConfiguration" class="org.apache.cxf.transport.jms.JMSConfiguration">
    <property name="connectionFactory" ref="pooledConnectionFactory"/>
    <property name="concurrentConsumers" value="1"/>
    <property name="explicitQosEnabled" value="true" />
    <property name="targetDestination" value="TEST.REPORT.REQ" />
    <property name="replyDestination" value="TEST.REPORT.RESP" />
    <!-- replyToDestination is not honored and the value of replyDestination gets sent to the server -->
    <property name="replyToDestination" value="TEST.REPORT.RRESP" />
  </bean>
 

  <jaxws:client id="reportService" xmlns:tns="http://reportincident.example.camel.apache.org"
                serviceClass="org.apache.camel.example.reportincident.ReportIncidentEndpoint"
                wsdlLocation="wsdl/report_incident.wsdl"
                serviceName="tns:ReportIncidentEndpointService"
                endpointName="tns:ReportIncidentService"
                address="jms://" >
        <!-- 
        address="jms:queue:TEST.REPORT.REQ?exchangePattern=InOut&amp;messageType=text&amp;dataFormat=MESSAGE&amp;replyTo=TEST.REPORT.RESP"
         -->
        <jaxws:features>
        <bean class="org.apache.cxf.transport.jms.JMSConfigFeature">
        	<property name="jmsConfig" ref="jmsConfiguration" />
        </bean>
        </jaxws:features>
        
  </jaxws:client>

  <camelContext xmlns="http://camel.apache.org/schema/blueprint" trace="false">
  <route id="sendIncident" trace="true">
    <from uri="timer://simpleTimer?period=30000"/>
    <bean ref="input" method="createInputReportIncident"/>

     <to uri="bean:reportService"/>

    <log message="The body of the response is: ${body}" loggingLevel="INFO"/>

  </route>
  </camelContext>

</blueprint>
